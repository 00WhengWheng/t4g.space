/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as GiftRouteImport } from './routes/gift'
import { Route as ChallengeRouteImport } from './routes/challenge'
import { Route as CallbackRouteImport } from './routes/callback'
import { Route as AnalyticsRouteImport } from './routes/analytics'
import { Route as IndexRouteImport } from './routes/index'

const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const GiftRoute = GiftRouteImport.update({
  id: '/gift',
  path: '/gift',
  getParentRoute: () => rootRouteImport,
} as any)
const ChallengeRoute = ChallengeRouteImport.update({
  id: '/challenge',
  path: '/challenge',
  getParentRoute: () => rootRouteImport,
} as any)
const CallbackRoute = CallbackRouteImport.update({
  id: '/callback',
  path: '/callback',
  getParentRoute: () => rootRouteImport,
} as any)
const AnalyticsRoute = AnalyticsRouteImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/analytics': typeof AnalyticsRoute
  '/callback': typeof CallbackRoute
  '/challenge': typeof ChallengeRoute
  '/gift': typeof GiftRoute
  '/profile': typeof ProfileRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/analytics': typeof AnalyticsRoute
  '/callback': typeof CallbackRoute
  '/challenge': typeof ChallengeRoute
  '/gift': typeof GiftRoute
  '/profile': typeof ProfileRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/analytics': typeof AnalyticsRoute
  '/callback': typeof CallbackRoute
  '/challenge': typeof ChallengeRoute
  '/gift': typeof GiftRoute
  '/profile': typeof ProfileRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/analytics'
    | '/callback'
    | '/challenge'
    | '/gift'
    | '/profile'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/analytics' | '/callback' | '/challenge' | '/gift' | '/profile'
  id:
    | '__root__'
    | '/'
    | '/analytics'
    | '/callback'
    | '/challenge'
    | '/gift'
    | '/profile'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AnalyticsRoute: typeof AnalyticsRoute
  CallbackRoute: typeof CallbackRoute
  ChallengeRoute: typeof ChallengeRoute
  GiftRoute: typeof GiftRoute
  ProfileRoute: typeof ProfileRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/gift': {
      id: '/gift'
      path: '/gift'
      fullPath: '/gift'
      preLoaderRoute: typeof GiftRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/challenge': {
      id: '/challenge'
      path: '/challenge'
      fullPath: '/challenge'
      preLoaderRoute: typeof ChallengeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/callback': {
      id: '/callback'
      path: '/callback'
      fullPath: '/callback'
      preLoaderRoute: typeof CallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/analytics': {
      id: '/analytics'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof AnalyticsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AnalyticsRoute: AnalyticsRoute,
  CallbackRoute: CallbackRoute,
  ChallengeRoute: ChallengeRoute,
  GiftRoute: GiftRoute,
  ProfileRoute: ProfileRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
